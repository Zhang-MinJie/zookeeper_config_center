<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
	<springProperty scope="context" name="APP_NAME" source="spring.application.name" />
	<property name="LOG_HOME" value="/home/zhangminjie/workspace/other/demo/logs/${APP_NAME}" />
	<property name="LOG_FILE" value="${LOG_HOME}/logback.log" />
	<property name="PATTERN" value="[%d{yyyy-MM-dd HH:mm:ss.SSS}][%-5level][${APP_NAME}][%thread][%logger#%line]: %msg%n" />

	<appender name="CONSOLE"
		class="ch.qos.logback.core.ConsoleAppender">
		<!-- encoder 默认配置为PatternLayoutEncoder -->
		<encoder>
			<pattern>${PATTERN}</pattern>
		</encoder>
	</appender>
	<appender name="FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_FILE}</file>
		<append>true</append>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<fileNamePattern>${LOG_HOME}/logs/%d{yyyy-MM-dd}.%i.log.zip
			</fileNamePattern>
			<maxFileSize>100MB</maxFileSize>
			<maxHistory>7</maxHistory>
			<totalSizeCap>50GB</totalSizeCap>
		</rollingPolicy>
		<encoder>
			<pattern>${PATTERN}</pattern>
		</encoder>
	</appender>
	<appender name="KAFKA" class="com.github.danielwegener.logback.kafka.KafkaAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${PATTERN}</pattern>
		</encoder>
		<topic>logs</topic>
        <!-- we don't care how the log messages will be partitioned  -->
        <keyingStrategy class="com.github.danielwegener.logback.kafka.keying.NoKeyKeyingStrategy" />

        <!-- use async delivery. the application threads are not blocked by logging -->
        <deliveryStrategy class="com.github.danielwegener.logback.kafka.delivery.AsynchronousDeliveryStrategy" />

        <!-- each <producerConfig> translates to regular kafka-client config (format: key=value) -->
        <!-- producer configs are documented here: https://kafka.apache.org/documentation.html#newproducerconfigs -->
        <!-- bootstrap.servers is the only mandatory producerConfig -->
        <producerConfig>bootstrap.servers=172.23.0.2:9092,172.23.0.3:9092,172.23.0.8:9092</producerConfig>
        <!-- don't wait for a broker to ack the reception of a batch.  -->
        <producerConfig>acks=0</producerConfig>
        <!-- wait up to 1000ms and collect log messages before sending them as a batch -->
        <producerConfig>linger.ms=1000</producerConfig>
        <!-- even if the producer buffer runs full, do not block the application but start to drop messages -->
        <producerConfig>max.block.ms=0</producerConfig>
        <!-- define a client-id that you use to identify yourself against the kafka broker -->
        <producerConfig>client.id=${HOSTNAME}-${CONTEXT_NAME}-logback-relaxed</producerConfig>

		<!-- there is no fallback <appender-ref>. If this appender cannot deliver, it will drop its messages. -->
		<appender-ref ref="CONSOLE" />
	</appender>
	<root level="INFO">
		<appender-ref ref="KAFKA" />
		<appender-ref ref="FILE" />
		<appender-ref ref="CONSOLE" />
	</root>
</configuration>
